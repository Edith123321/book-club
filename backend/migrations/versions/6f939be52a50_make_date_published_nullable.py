"""Make date_published nullable

Revision ID: 6f939be52a50
Revises: 30b76786d394
Create Date: 2025-05-05 16:47:02.139599

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6f939be52a50'
down_revision = '30b76786d394'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('book_clubs')
    with op.batch_alter_table('bookclubs', schema=None) as batch_op:
        batch_op.drop_constraint('bookclubs_owner_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['owner_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('books', schema=None) as batch_op:
        batch_op.alter_column('date_published',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))

    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('summaries', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('meetings', schema=None) as batch_op:
        batch_op.alter_column('meeting_date', new_column_name='meeting_time')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('summaries', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('books', schema=None) as batch_op:
        batch_op.alter_column('date_published',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))

    with op.batch_alter_table('bookclubs', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('bookclubs_owner_id_fkey', 'users', ['owner_id'], ['id'])
    
    with op.batch_alter_table('meetings', schema=None) as batch_op:
        batch_op.alter_column('meeting_time', new_column_name='meeting_date')
        
    op.create_table('book_clubs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('synopsis', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='book_clubs_owner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='book_clubs_pkey')
    )
    # ### end Alembic commands ###
